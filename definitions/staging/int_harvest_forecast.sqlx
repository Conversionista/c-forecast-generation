config {
    type: "table",
    schema: "c_forecast_dev",
    name: "int_harvest_forecast"
}

WITH
  Time AS (
  SELECT
    id,
    CAST(start_date AS DATE) AS start_date,
    CAST(end_date AS DATE) AS end_date,
    allocation,
    project_id,
    person_id,
    updated_at
  FROM
    ${ref("assignments_combined_filtered")} ),
  Projects AS (
  SELECT
    t1.*,
    COALESCE(t2.name, t3.name) AS client,
    COALESCE(t2.harvest_id, t3.harvest_id) AS harvest_client_id
  FROM
    ${ref("projects_combined_filtered")} AS t1
  LEFT JOIN
    ${ref("forecast_se_clients")} AS t2
  ON
    CAST(t1.client_id AS STRING) = CAST(t2.id AS STRING)
  LEFT JOIN
    ${ref("forecast_no_clients")} AS t3
  ON
    CAST(t1.client_id AS STRING) = CAST(t3.id AS STRING) ),
  People AS (
  SELECT
    *
  FROM
    ${ref("people_combined")} )
SELECT
  t1.id AS task_id,
  t1.start_date,
  t1.end_date,
  (t1.allocation/3600) AS hours_per_day,
  (CASE
      WHEN DATE_DIFF(t1.end_date, t1.start_date, WEEK) > 0 THEN DATE_DIFF(t1.end_date, t1.start_date, day) - (DATE_DIFF(t1.end_date, t1.start_date, week) * 2) +1
      ELSE DATE_DIFF(t1.end_date, t1.start_date, day) +1
  END
    )*(t1.allocation/3600) AS total_hours,
  t1.updated_at,
  t2.name,
  t2.employee_id,
  t2.country,
  t2.location,
  t2.specialty,
  t3.client,
  t3.name AS project_name,
  t3.code AS project_code,
  LEFT(t3.code,4) AS client_id,
  t3.color,
  t3.start_date AS project_start_date,
  t3.end_date AS project_end_date,
  t3.archived,
  CASE
    WHEN t1.start_date <= CURRENT_DATE() AND t1.end_date > CURRENT_DATE() THEN "Yes"
    ELSE "No"
  END AS active
FROM
  Time AS t1
LEFT JOIN
  People AS t2
ON
  t1.person_id = t2.forecast_person_id
LEFT JOIN
  Projects AS t3
ON
  t1.project_id = t3.id