config {
    type: "table",
    schema: "c_forecast_dev",
    name: "int_forecast_per_day"
}

js {
    function unpackEmployees(employeesJson) {
        const employees = JSON.parse(employeesJson);
        return employees.map(emp => `'${JSON.stringify(emp)}'`).join(',');
    }
    const employeesToExclude = unpackEmployees(dataform.projectConfig.vars.employees_to_exclude);
}

WITH employees_to_exclude AS (
  SELECT 
    JSON_VALUE(employee, '$.id') AS id,
    JSON_VALUE(employee, '$.name') AS name
  FROM UNNEST([${employeesToExclude}]) AS employee
),

workdays AS (
  SELECT
    date,
    IF(ph.name IS NOT NULL, TRUE, FALSE) AS public_holiday
  FROM
    UNNEST(
      GENERATE_DATE_ARRAY('2023-01-01', LAST_DAY((DATE_ADD(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 180 DAY)), YEAR), INTERVAL 1 DAY)
    ) AS date
  LEFT JOIN
    `conversionista-se.sold_and_forecast.public_holidays` AS ph
  ON
    date = ph.date
  WHERE
    EXTRACT(DAYOFWEEK FROM date) BETWEEN 2 AND 6
),

forecast_agg AS (
  SELECT
    date,
    employee_id,
    ROUND(SUM(IF(color = 'blue', hours_per_day, 0)), 1) AS client_hours,
    ROUND(SUM(IF(color = 'orange', hours_per_day, 0)), 1) AS internal_hours,
    ROUND(SUM(IF(color = 'black', hours_per_day, 0)), 1) AS timeoff_hours,
    ROUND(SUM(IF(color NOT IN ('black', 'orange', 'blue'), hours_per_day, 0)), 1) AS other_hours
  FROM
    `conversionista-se.c_forecast_dev.int_forecast_daily`
  WHERE
    employee_id NOT IN (SELECT id FROM employees_to_exclude)
  GROUP BY
    1, 2
),

canvas AS (
  SELECT
    e.name,
    e.location,
    e.employee_id,
    e.specialty,
    e.seniority,
    w.date,
    IF(w.public_holiday, 8, NULL) AS public_holiday_hours
  FROM
    `conversionista-se.c_forecast_dev.people_combined` e
  CROSS JOIN
    workdays w
  WHERE
    e.employee_id NOT IN (SELECT id FROM employees_to_exclude)
)

SELECT
  c.date,
  c.name,
  c.employee_id,
  c.location,
  c.specialty,
  c.seniority,
  ROUND(COALESCE(c.public_holiday_hours, 0), 0) AS public_holiday_hours,
  COALESCE(f.timeoff_hours, 0) AS timeoff_hours,
  COALESCE(f.client_hours, 0) AS client_hours,
  COALESCE(f.internal_hours, 0) AS internal_hours,
  COALESCE(f.other_hours, 0) AS other_hours,
  (8 - COALESCE(c.public_holiday_hours, f.timeoff_hours, 0)) AS available_hours,
  (8 - COALESCE(c.public_holiday_hours, f.timeoff_hours, 0) - COALESCE(f.client_hours, 0)) AS capacity_hours
FROM
  canvas c
LEFT JOIN
  forecast_agg f
ON
  c.employee_id = f.employee_id AND c.date = f.date
ORDER BY
  c.date, c.name