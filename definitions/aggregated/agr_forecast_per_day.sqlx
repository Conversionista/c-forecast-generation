config {
    type: "table",
    schema: "c_forecast_dev",
    name: "int_forecast_per_day",
    tags: ['Sweden', 'Norway']
}

WITH workdays AS (
  SELECT DISTINCT
    date,
    is_public_holiday
  FROM
    ${ref("stg_forecast_daily")}
  WHERE EXTRACT(DAYOFWEEK FROM date) BETWEEN 2 AND 6
),

employees AS (
  SELECT
    name,
    employee_id,
    location,
    specialty,
    seniority,
    company,
    date_of_hiring,
    date_of_termination
  FROM
    ${ref("stg_people_combined")}
  WHERE
    employee_id NOT IN (SELECT employee_id FROM ${ref("employees_to_exclude_from_forecast")})
    AND (date_of_termination IS NULL OR date_of_termination > CURRENT_DATE())
    AND date_of_hiring <= CURRENT_DATE()
),

forecast_agg AS (
  SELECT
    date,
    employee_id,
    ROUND(SUM(CASE WHEN color = 'blue' THEN hours_per_day ELSE 0 END), 1) AS client_hours,
    ROUND(SUM(CASE WHEN color = 'orange' THEN hours_per_day ELSE 0 END), 1) AS internal_hours,
    ROUND(SUM(CASE WHEN color = 'black' THEN hours_per_day ELSE 0 END), 1) AS timeoff_hours,
    ROUND(SUM(CASE WHEN color NOT IN ('black', 'orange', 'blue') THEN hours_per_day ELSE 0 END), 1) AS other_hours
  FROM
    ${ref("stg_forecast_daily")}
  WHERE
    employee_id NOT IN (SELECT employee_id FROM ${ref("employees_to_exclude_from_forecast")})
  GROUP BY
    1, 2
)

SELECT
  w.date,
  e.name,
  e.employee_id,
  e.location,
  e.company,
  e.specialty,
  e.seniority,
  CASE WHEN w.is_public_holiday THEN 8 ELSE 0 END AS public_holiday_hours,
  CASE WHEN w.is_public_holiday THEN 0 ELSE COALESCE(f.timeoff_hours, 0) END AS timeoff_hours,
  CASE WHEN w.is_public_holiday THEN 0 ELSE COALESCE(f.client_hours, 0) END AS client_hours,
  CASE WHEN w.is_public_holiday THEN 0 ELSE COALESCE(f.internal_hours, 0) END AS internal_hours,
  CASE WHEN w.is_public_holiday THEN 0 ELSE COALESCE(f.other_hours, 0) END AS other_hours,
  CASE WHEN w.is_public_holiday THEN 0 ELSE 8 - COALESCE(f.timeoff_hours, 0) END AS available_hours,
  CASE WHEN w.is_public_holiday THEN 0 ELSE 8 - COALESCE(f.timeoff_hours, 0) - COALESCE(f.client_hours, 0) END AS capacity_hours
FROM
  workdays w
CROSS JOIN
  employees e
LEFT JOIN
  forecast_agg f ON w.date = f.date AND e.employee_id = f.employee_id
WHERE
  w.date >= e.date_of_hiring
  AND (e.date_of_termination IS NULL OR w.date <= e.date_of_termination)
ORDER BY
  w.date, e.name